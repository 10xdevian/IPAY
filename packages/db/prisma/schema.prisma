generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  username          String              @unique
  email             String?             @unique
  phone             String              @unique
  password          String
  OnRampTransaction OnRampTransaction[]
  Balance           Balance[]
  kyc               Kyc?
}

model Merchant {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  auth_type AuthType
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

model Kyc {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  fullName        String
  fatherName      String
  city            String
  pincode         String
  profileImageUrl String?
  documentType    DocumentType
  documentNumber  String       @unique

  paymentPin String // hashed, set during KYC
  status     KycStatus @default(Pending)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Success
  Failure
  Processing
}

enum DocumentType {
  Aadhaar
  Passport
  PAN
}

enum KycStatus {
  Pending
  Approved
  Rejected
}
